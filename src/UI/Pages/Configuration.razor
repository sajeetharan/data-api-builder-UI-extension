@page "/configuration"
@using System.Text.Json
@using System
@using System.Text
@using UI.Shared.SharedClasses
@using System.IO
@inject IJSRuntime JS

<FluentLabel Typo=Typography.PageTitle>Configuration</FluentLabel>

@if (MutableRuntimeConfig != null)
{
    <div class="config-container">
        <div class="config-item-container">
            <FluentSelect @bind-Value=MutableRuntimeConfig.MutableDataSource.DatabaseType Items=@_databaseTypes
                OptionValue="@(p => p.Value)"
                OptionText="@(p => p.Label)"
                Label="Database type" />
        </div>
        <div class="config-item-container">
            <FluentTextField TextFieldType="TextFieldType.Password" @bind-Value=MutableRuntimeConfig.MutableDataSource.ConnectionString Label="Connection string" style="width: 100%;"></FluentTextField>
        </div>
    </div>
    <FluentDivider />
    <FluentLabel Typo=Typography.Header>Runtime</FluentLabel>

    <div class="config-container">
        <div class="config-container">
            <FluentLabel Typo=Typography.Subject>REST</FluentLabel>
            <div class="config-item-container flex">
                <FluentSwitch @bind-Value=MutableRuntimeConfig.MutableRuntimeOptions.Rest.Enabled>Enabled</FluentSwitch>
                <div class="ml-4">
                    <FluentTextField @bind-Value=MutableRuntimeConfig.MutableRuntimeOptions.Rest.Path AriaLabel="Path"></FluentTextField>
                </div>
            </div>
        </div>

        <div class="config-container">
            <FluentLabel Typo=Typography.Subject>GraphQL</FluentLabel>
            <div class="config-item-container flex">
                <FluentSwitch @bind-Value=MutableRuntimeConfig.MutableRuntimeOptions.GraphQL.Enabled>Enabled</FluentSwitch>
                <div class="ml-4">
                    <FluentTextField @bind-Value=MutableRuntimeConfig.MutableRuntimeOptions.GraphQL.Path AriaLabel="Path"></FluentTextField>
                </div>
            </div>
        </div>
    </div>

    <div class="config-container">
        <FluentLabel Typo=Typography.Subject>CORS</FluentLabel>
        <div class="config-item-container flex">
            <FluentTextField @bind-Value=MutableRuntimeConfig.MutableRuntimeOptions!.Host!.Cors!.Origins Label="CORS origins"></FluentTextField>
        </div>
    </div>

    <div class="config-container">
        <FluentLabel Typo=Typography.Subject>Authentication</FluentLabel>
        <div class="config-item-container flex">
            @if (MutableRuntimeConfig.MutableRuntimeOptions.Host.Authentication is not null)
            {
                <FluentTextField @bind-Value=MutableRuntimeConfig.MutableRuntimeOptions.Host.Authentication.Provider Label="Provider"></FluentTextField>
            }
        </div>
        <label>
            @if (MutableRuntimeConfig.MutableRuntimeOptions?.Host?.Authentication is not null)
            {
                <select @onchange="OnAuthNProviderChange">
                    <option value="">Select a value</option>
                    <option value="SWA">StaticWebApps</option>
                    <option value="JwtAuthenticationComponent">OpenID Connect Provider</option>
                </select>
            }
        </label>
    </div>
    @if (_selectedType is not null)
    {
        <div class="config-container">
            <DynamicComponent Type="@_selectedType" />
        </div>
    }

    <div class ="config-container">
        <FluentButton @onclick="PublishNewConfig">Publish</FluentButton>
        <FluentButton @onclick="SaveNewConfig">Save</FluentButton>
    </div>

    <FluentButton OnClick="LogJSON">Log JSON</FluentButton>
}
else
{
    <p>Loading...</p>
}
